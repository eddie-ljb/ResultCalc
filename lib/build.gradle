/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java'
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'
    testImplementation 'org.hamcrest:hamcrest:2.2'
    implementation 'com.google.guava:guava:31.1-jre'
    implementation 'org.apache.commons:commons-collections4:4.1'
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.5'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.5'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.5'
    implementation 'org.json:json:20210307'
    implementation 'com.formdev:flatlaf:3.4'
}

application {
    mainClassName = 'de.ebader.resultcalc.Startpunkt'
}

jar {
    manifest {
        attributes(
            'Main-Class': 'de.ebader.resultcalc.Startpunkt'
        )
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.INCLUDE  // This line handles duplicates
    // Hier wird festgelegt, wo das JAR-File gespeichert wird
    archiveFileName = 'resultcalc.jar'
    
    
    compileJava.options.encoding = 'UTF-8'

	tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
}
